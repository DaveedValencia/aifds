{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://aifds.org/schemas/v1/services.schema.json",
  "title": "AIFDS Service Catalog (v1 draft)",
  "description": "Array of service offerings aligned with schema.org/Service.",
  "type": "array",
  "minItems": 1,
  "items": {
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "@context": { "const": "https://schema.org" },
      "@type": { "const": "Service" },
      "@id": {
        "description": "Stable URI for this service offering.",
        "type": "string",
        "minLength": 1
      },
      "name": { "type": "string", "minLength": 1 },
      "alternateName": { "type": "string" },
      "serviceType": { "type": "string", "minLength": 1 },
      "category": { "type": "string" },
      "description": { "type": "string", "minLength": 1 },
      "url": { "type": "string", "format": "uri" },
      "image": {
        "oneOf": [
          { "type": "string", "format": "uri" },
          {
            "type": "array",
            "items": { "type": "string", "format": "uri" },
            "minItems": 1,
            "maxItems": 6
          }
        ]
      },
      "provider": {
        "description": "Agency or studio delivering the service.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "@type": { "enum": ["Organization", "ProfessionalService"] },
          "name": { "type": "string", "minLength": 1 },
          "url": { "type": "string", "format": "uri" }
        },
        "required": ["@type", "name"]
      },
      "serviceArea": {
        "description": "Geographies where the service is offered.",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "AdministrativeArea" },
            "name": { "type": "string", "minLength": 1 }
          },
          "required": ["@type", "name"]
        },
        "maxItems": 20
      },
      "areaServed": {
        "type": "array",
        "items": { "type": "string", "minLength": 1 },
        "maxItems": 20,
        "uniqueItems": true
      },
      "audience": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "Audience" },
            "audienceType": { "type": "string", "minLength": 1 },
            "geographicArea": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "@type": { "const": "AdministrativeArea" },
                "name": { "type": "string", "minLength": 1 }
              },
              "required": ["@type", "name"]
            }
          },
          "required": ["@type", "audienceType"]
        },
        "maxItems": 10
      },
      "deliverable": {
        "description": "Artifacts or outcomes produced by the service.",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "CreativeWork" },
            "name": { "type": "string", "minLength": 1 },
            "description": { "type": "string" }
          },
          "required": ["@type", "name"]
        },
        "maxItems": 25
      },
      "serviceOutput": {
        "description": "Tangible result clients receive.",
        "type": "string"
      },
      "termsOfService": {
        "type": "string",
        "format": "uri"
      },
      "isSimilarTo": {
        "description": "Related services to aid cross-sell.",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@id": { "type": "string", "minLength": 1 }
          },
          "required": ["@id"]
        },
        "maxItems": 20
      },
      "offers": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "Offer" },
            "name": { "type": "string", "minLength": 1 },
            "price": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]{2})?$"
            },
            "priceCurrency": {
              "type": "string",
              "pattern": "^[A-Z]{3}$"
            },
            "priceSpecification": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "@type": { "const": "UnitPriceSpecification" },
                "price": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]{2})?$"
                },
                "priceCurrency": {
                  "type": "string",
                  "pattern": "^[A-Z]{3}$"
                },
                "billingDuration": {
                  "type": "string",
                  "pattern": "^P(T)?[0-9HMSDWMY]+$",
                  "description": "ISO 8601 duration."
                },
                "billingIncrement": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": ["@type", "price", "priceCurrency"]
            },
            "eligibleCustomerType": {
              "type": "string",
              "enum": ["business", "enterprise", "startup", "consumer", "government"]
            },
            "availabilityStarts": { "type": "string", "format": "date" },
            "availabilityEnds": { "type": "string", "format": "date" },
            "itemOffered": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "@id": { "type": "string", "minLength": 1 }
              },
              "required": ["@id"]
            }
          },
          "required": ["@type", "name"]
        },
        "maxItems": 10
      },
      "hasOfferCatalog": {
        "description": "Reference to pricing bundles defined in pricing schema.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "@id": { "type": "string", "minLength": 1 }
        },
        "required": ["@id"]
      },
      "hoursAvailable": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "OpeningHoursSpecification" },
            "dayOfWeek": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "https://schema.org/Monday",
                  "https://schema.org/Tuesday",
                  "https://schema.org/Wednesday",
                  "https://schema.org/Thursday",
                  "https://schema.org/Friday",
                  "https://schema.org/Saturday",
                  "https://schema.org/Sunday"
                ]
              },
              "minItems": 1,
              "maxItems": 7
            },
            "opens": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" },
            "closes": { "type": "string", "pattern": "^[0-2][0-9]:[0-5][0-9]$" }
          },
          "required": ["@type", "dayOfWeek", "opens", "closes"]
        },
        "maxItems": 14
      },
      "providerMobility": {
        "description": "Whether service is delivered on-site, remote, or hybrid.",
        "type": "string",
        "enum": ["online", "onSite", "hybrid"]
      },
      "workExample": {
        "description": "Representative case studies or samples.",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "@type": { "const": "CreativeWork" },
            "name": { "type": "string", "minLength": 1 },
            "description": { "type": "string" },
            "url": { "type": "string", "format": "uri" }
          },
          "required": ["@type", "name"]
        },
        "maxItems": 20
      },
      "lastModified": {
        "description": "Timestamp the service entry was last regenerated.",
        "type": "string",
        "format": "date-time"
      }
    },
    "required": [
      "@context",
      "@type",
      "@id",
      "name",
      "serviceType",
      "description",
      "lastModified"
    ]
  }
}
